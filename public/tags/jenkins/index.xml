<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Jenkins on Daniel Schaaff</title>
    <link>http://localhost:1313/tags/jenkins/</link>
    <description>Recent content in Jenkins on Daniel Schaaff</description>
    <generator>Hugo -- 0.147.4</generator>
    <language>en</language>
    <lastBuildDate>Fri, 09 Feb 2018 18:42:27 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/jenkins/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Better Jenkins Notifications in Declarative Pipelines</title>
      <link>http://localhost:1313/posts/2018/better-jenkins-notifications-in-declarative-pipelines/</link>
      <pubDate>Fri, 09 Feb 2018 18:42:27 +0000</pubDate>
      <guid>http://localhost:1313/posts/2018/better-jenkins-notifications-in-declarative-pipelines/</guid>
      <description>&lt;p&gt;I’ve been using declarative pipelines in Jenkins for a while with the Slack &lt;a href=&#34;https://github.com/jenkinsci/slack-plugin&#34;&gt;plugin&lt;/a&gt; to send build notifications to Slack. The plugin does what it says on the tin but gives you a pretty boring message by default.&lt;/p&gt;
&lt;p&gt;![E8F315D1-04A6-4DC4-B0D8-1E1E7ED42D08.png]({{ site.url }}/assets/img/e8f315d1-04a6-4dc4-b0d8-1e1e7ed42d08.png)&lt;/p&gt;
&lt;p&gt;I used the environment variables available in the pipeline to make things a little bit better and link back to the job.&lt;/p&gt;
&lt;p&gt;![08A97422-A7E2-4AB5-A65B-68EF7B5AE196.png]({{ site.url }}/assets/img/08a97422-a7e2-4ab5-a65b-68ef7b5ae196.png)&lt;/p&gt;
&lt;p&gt;But I was still always disappointed the notifications didn’t contain more information. Thankfully version 2.3 of the &lt;a href=&#34;https://github.com/jenkinsci/slack-plugin&#34;&gt;plugin&lt;/a&gt; added support for the attachments portion of the &lt;a href=&#34;https://api.slack.com/docs/message-formatting&#34;&gt;Slack message API&lt;/a&gt;. I was able to leverage the attachments feature to get better message formatting. Meanwhile, I took some inspiration from &lt;a href=&#34;https://stackoverflow.com/questions/39920437/how-to-access-junit-test-counts-in-jenkins-pipeline-project&#34;&gt;this thread&lt;/a&gt; to incorporate test result summaries.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Escaping Characters in Jenkins Declarative Pipelines</title>
      <link>http://localhost:1313/posts/2017/escaping-characters-in-jenkins-declarative-pipelines/</link>
      <pubDate>Fri, 06 Oct 2017 23:19:08 +0000</pubDate>
      <guid>http://localhost:1313/posts/2017/escaping-characters-in-jenkins-declarative-pipelines/</guid>
      <description>&lt;p&gt;I spent way too long troubleshooting a script step in a Jenkins declarative pipeline this week. After lots of frustration I stumbled upon this &lt;a href=&#34;https://gist.github.com/cyrille-leclerc/8cad9d1b35ea553820a1&#34;&gt;gist&lt;/a&gt; that was a life saver. Long story short you need &lt;code&gt;\\&lt;/code&gt; to escape literal quotes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jenkins Dynamic EC2 Executors</title>
      <link>http://localhost:1313/posts/2017/844/</link>
      <pubDate>Tue, 25 Jul 2017 22:50:10 +0000</pubDate>
      <guid>http://localhost:1313/posts/2017/844/</guid>
      <description>&lt;p&gt;There is a nice plugin for Jenkins that lets you dynamically add capacity by spinning up EC2 instances on demand and then terminating them when the job queue expires. This is a great way to save money on an AWS based build infrastructure.&lt;/p&gt;
&lt;p&gt;Unfortunately, the plugin documentation is really light and there are a few gotchas to look out for.&lt;/p&gt;
&lt;h2 id=&#34;security-groups&#34;&gt;Security Groups&lt;/h2&gt;
&lt;p&gt;This field only accepts comma separated security group IDs, not names. This is frustrating because other fields in the plugin take a space separated list (e.g. labels)&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
